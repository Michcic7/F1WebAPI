// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(StandingsContext))]
    [Migration("20230211210118_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Points")
                        .HasColumnType("real");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandingsYearId")
                        .HasColumnType("int");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DriverId");

                    b.HasIndex("StandingsYearId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("API.Models.Race", b =>
                {
                    b.Property<int>("RaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaceId"));

                    b.Property<string>("Car")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Laps")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandingsYearId")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WinnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RaceId");

                    b.HasIndex("StandingsYearId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("API.Models.StandingsYear", b =>
                {
                    b.Property<int>("StandingsYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StandingsYearId"));

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("StandingsYearId");

                    b.ToTable("StandingsYears");
                });

            modelBuilder.Entity("API.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Points")
                        .HasColumnType("real");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandingsYearId")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.HasIndex("StandingsYearId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("API.Models.Driver", b =>
                {
                    b.HasOne("API.Models.StandingsYear", "StandingsYear")
                        .WithMany("Drivers")
                        .HasForeignKey("StandingsYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StandingsYear");
                });

            modelBuilder.Entity("API.Models.Race", b =>
                {
                    b.HasOne("API.Models.StandingsYear", "StandingsYear")
                        .WithMany("Races")
                        .HasForeignKey("StandingsYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StandingsYear");
                });

            modelBuilder.Entity("API.Models.Team", b =>
                {
                    b.HasOne("API.Models.StandingsYear", "StandingsYear")
                        .WithMany("Teams")
                        .HasForeignKey("StandingsYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StandingsYear");
                });

            modelBuilder.Entity("API.Models.StandingsYear", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("Races");

                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
